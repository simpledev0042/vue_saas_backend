{"version":3,"file":"js/3492.f7bdfa7b.js","mappings":"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","sources":["webpack://velzon/./src/components/page-header.vue","webpack://velzon/./src/components/page-header.vue?46f7","webpack://velzon/./src/views/charts/chartjs/index.vue","webpack://velzon/./node_modules/@kurkle/color/dist/color.esm.js","webpack://velzon/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://velzon/./node_modules/chart.js/dist/chart.js","webpack://velzon/./node_modules/@j-t-mcc/vue3-chartjs/dist/vue3-chartjs.es.js","webpack://velzon/./src/views/charts/chartjs/data.js","webpack://velzon/./src/views/charts/chartjs/index.vue?00f7"],"sourcesContent":["<script>\nexport default {\n  components: {},\n  props: {\n    title: {\n      type: String,\n      default: \"\",\n    },\n    items: {\n      type: Array,\n      default: () => {\n        return [];\n      },\n    },\n  },\n};\n</script>\n\n<template>\n  <b-row>\n    <b-col cols=\"12\">\n      <div class=\"page-title-box d-sm-flex align-items-center justify-content-between\">\n        <h4 class=\"mb-sm-0\">{{ title }}</h4>\n\n        <div class=\"page-title-right\">\n          <ol class=\"breadcrumb m-0\">\n            <li class=\"breadcrumb-item\" v-for=\"(item, index) in items\" :key=\"index\" :class=\"{ active: item[0] }\">\n              <b-link href=\"javascript: void(0);\">{{ item.text }}</b-link>\n            </li>\n          </ol>\n        </div>\n      </div>\n    </b-col>\n  </b-row>\n</template>\n","import { render } from \"./page-header.vue?vue&type=template&id=d074f296\"\nimport script from \"./page-header.vue?vue&type=script&lang=js\"\nexport * from \"./page-header.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\Working\\\\velzon_vue_saas\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\r\nimport Layout from \"../../../layouts/main\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../../app.config\";\r\nimport Vue3ChartJs from \"@j-t-mcc/vue3-chartjs\";\r\n\r\nimport { line, pie, Doughnut, radar, bar, PolarArea } from \"./data\";\r\n\r\n/**\r\n * Chartjs-chart component\r\n */\r\nexport default {\r\n  page: {\r\n    title: \"Chartjs Charts\",\r\n    meta: [{ name: \"description\", content: appConfig.description }],\r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    Vue3ChartJs,\r\n  },\r\n  data() {\r\n    return {\r\n      line: line,\r\n      pie: pie,\r\n      Doughnut: Doughnut,\r\n      radar: radar,\r\n      bar: bar,\r\n      PolarArea: PolarArea,\r\n      title: \"Chartjs\",\r\n      items: [\r\n        {\r\n          text: \"Charts\",\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: \"Chartjs\",\r\n          active: true,\r\n        },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\" />\r\n    <b-row>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Line Chart</b-card-title>\r\n            <vue3-chart-js class=\"chartjs-chart\" v-bind=\"{ ...line }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Bar Chart</b-card-title>\r\n\r\n            <vue3-chart-js class=\"chartjs-chart\" v-bind=\"{ ...bar }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Pie Chart</b-card-title>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...pie }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Donut Chart</b-card-title>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...Doughnut }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Polar area Chart</b-card-title>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...PolarArea }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n      <b-col lg=\"6\">\r\n        <b-card no-body>\r\n          <b-card-body>\r\n            <b-card-title class=\"mb-4\">Radar Chart</b-card-title>\r\n\r\n            <vue3-chart-js :height=\"140\" class=\"chartjs-chart\" v-bind=\"{ ...radar }\"></vue3-chart-js>\r\n          </b-card-body>\r\n        </b-card>\r\n      </b-col>\r\n    </b-row>\r\n  </Layout>\r\n</template>","/*!\n * @kurkle/color v0.3.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.1.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.1.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = this.ticks.length;\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; ++i){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.1.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { options: { elements  } , data: { datasets  }  } = chart.config;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nimport { defineComponent, ref, onMounted, h } from \"vue\";\nimport { registerables, Chart } from \"chart.js\";\nconst chartJsEventNames = [\n  \"install\",\n  \"start\",\n  \"stop\",\n  \"beforeInit\",\n  \"afterInit\",\n  \"beforeUpdate\",\n  \"afterUpdate\",\n  \"beforeElementsUpdate\",\n  \"reset\",\n  \"beforeDatasetsUpdate\",\n  \"afterDatasetsUpdate\",\n  \"beforeDatasetUpdate\",\n  \"afterDatasetUpdate\",\n  \"beforeLayout\",\n  \"afterLayout\",\n  \"afterLayout\",\n  \"beforeRender\",\n  \"afterRender\",\n  \"resize\",\n  \"destroy\",\n  \"uninstall\",\n  \"afterTooltipDraw\",\n  \"beforeTooltipDraw\"\n];\nfunction generateEventObject(type, chartRef = null) {\n  return {\n    type,\n    chartRef,\n    preventDefault() {\n      this._defaultPrevented = true;\n    },\n    isDefaultPrevented() {\n      return !this._defaultPrevented;\n    },\n    _defaultPrevented: false\n  };\n}\nfunction generateChartJsEventListener(emit, event) {\n  return {\n    [event.type]: () => {\n      emit(event.type, event);\n      return event.isDefaultPrevented();\n    }\n  };\n}\nif (registerables !== void 0) {\n  Chart.register(...registerables);\n}\nconst Vue3ChartJs = defineComponent({\n  name: \"Vue3ChartJs\",\n  props: {\n    type: {\n      type: String,\n      required: true\n    },\n    height: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    width: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    options: {\n      type: Object,\n      default: () => ({})\n    },\n    plugins: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: chartJsEventNames,\n  setup(props, { emit }) {\n    const chartRef = ref(null);\n    const chartJsEventsPlugin = chartJsEventNames.reduce((reduced, eventType) => {\n      const event = generateEventObject(eventType, chartRef);\n      return __spreadValues(__spreadValues({}, reduced), generateChartJsEventListener(emit, event));\n    }, { id: \"Vue3ChartJsEventHookPlugin\" });\n    const chartJSState = {\n      chart: null,\n      plugins: [\n        chartJsEventsPlugin,\n        ...props.plugins\n      ],\n      props: __spreadValues({}, props)\n    };\n    const destroy = () => {\n      if (chartJSState.chart) {\n        chartJSState.chart.destroy();\n        chartJSState.chart = null;\n      }\n    };\n    const update = (animateSpeed = 750) => {\n      chartJSState.chart.data = __spreadValues(__spreadValues({}, chartJSState.chart.data), chartJSState.props.data);\n      chartJSState.chart.options = __spreadValues(__spreadValues({}, chartJSState.chart.options), chartJSState.props.options);\n      chartJSState.chart.update(animateSpeed);\n    };\n    const resize = () => chartJSState.chart && chartJSState.chart.resize();\n    const render = () => {\n      if (chartJSState.chart) {\n        return chartJSState.chart.update();\n      }\n      return chartJSState.chart = new Chart(chartRef.value.getContext(\"2d\"), {\n        type: chartJSState.props.type,\n        data: chartJSState.props.data,\n        options: chartJSState.props.options,\n        plugins: chartJSState.plugins\n      });\n    };\n    onMounted(() => render());\n    return {\n      chartJSState,\n      chartRef,\n      render,\n      resize,\n      update,\n      destroy\n    };\n  },\n  render(props) {\n    return h(\"canvas\", {\n      ref: \"chartRef\",\n      height: props.height,\n      width: props.width\n    });\n  }\n});\nconst _sfc_main = Vue3ChartJs;\n_sfc_main.registerGlobalPlugins = (plugins) => {\n  Chart.register(...plugins);\n};\n_sfc_main.install = (app, options = {}) => {\n  var _a;\n  app.component(_sfc_main.name, _sfc_main);\n  if ((_a = options == null ? void 0 : options.plugins) == null ? void 0 : _a.length) {\n    _sfc_main.registerGlobalPlugins(options.plugins);\n  }\n};\nexport { _sfc_main as default };\n","function getChartColorsArray(colors){\r\n  colors = JSON.parse(colors);\r\n  return colors.map(function (value) {\r\n    var newValue = value.replace(\" \", \"\");\r\n    if (newValue.indexOf(\",\") === -1) {\r\n      var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);\r\n          if (color) {\r\n          color = color.replace(\" \", \"\");\r\n          return color;\r\n          }\r\n          else return newValue;\r\n      } else {\r\n          var val = value.split(',');\r\n          if (val.length == 2) {\r\n              var rgbaColor = getComputedStyle(document.documentElement).getPropertyValue(val[0]);\r\n              rgbaColor = \"rgba(\" + rgbaColor + \",\" + val[1] + \")\";\r\n              return rgbaColor;\r\n          } else {\r\n              return newValue;\r\n          }\r\n      }\r\n  });\r\n}\r\nconst line = {\r\n  type: \"line\",\r\n  data: {\r\n    labels: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n    ],\r\n    datasets: [{\r\n        label: \"Sales Analytics\",\r\n        fill: true,\r\n        lineTension: 0.5,\r\n        backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#405189\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#405189\",\r\n        pointHoverBorderColor: \"#fff\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [65, 59, 80, 81, 56, 55, 40, 55, 30, 80],\r\n      },\r\n      {\r\n        label: \"Monthly Earnings\",\r\n        fill: true,\r\n        lineTension: 0.5,\r\n        backgroundColor: getChartColorsArray('[\"--vz-success-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        borderCapStyle: \"butt\",\r\n        borderDash: [],\r\n        borderDashOffset: 0.0,\r\n        borderJoinStyle: \"miter\",\r\n        pointBorderColor: \"#0AB39C\",\r\n        pointBackgroundColor: \"#fff\",\r\n        pointBorderWidth: 1,\r\n        pointHoverRadius: 5,\r\n        pointHoverBackgroundColor: \"#0AB39C\",\r\n        pointHoverBorderColor: \"#eef0f2\",\r\n        pointHoverBorderWidth: 2,\r\n        pointRadius: 1,\r\n        pointHitRadius: 10,\r\n        data: [80, 23, 56, 65, 23, 35, 85, 25, 92, 36],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          // This more specific font property overrides the global property\r\n          font: {\r\n            family: 'Poppins',\r\n          }\r\n        }\r\n      },\r\n    },\r\n  },\r\n\r\n};\r\n\r\nconst pie = {\r\n  type: \"pie\",\r\n  data: {\r\n    labels: [\"Desktops\", \"Tablets\"],\r\n    datasets: [{\r\n      data: [300, 180],\r\n      backgroundColor: getChartColorsArray('[\"--vz-success\", \"--vz-light\"]'),\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-success\", \"--vz-light\"]'),\r\n      hoverBorderColor: \"#fff\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    responsive: true,\r\n  },\r\n};\r\n\r\nconst Doughnut = {\r\n  type: \"doughnut\",\r\n  data: {\r\n    labels: [\"Desktops\", \"Tablets\"],\r\n    datasets: [{\r\n      data: [300, 210],\r\n      backgroundColor: getChartColorsArray('[\"--vz-primary\", \"--vz-light\"]'),\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-primary\", \"--vz-light\"]'),\r\n      hoverBorderColor: \"#fff\",\r\n      borderWidth: 0,\r\n      radius: \"90%\",\r\n      innerRadius: \"75%\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n  },\r\n};\r\n\r\nconst radar = {\r\n  type: 'radar',\r\n  data: {\r\n    labels: [\r\n      'Eating',\r\n      'Drinking',\r\n      'Sleeping',\r\n      'Designing',\r\n      'Coding',\r\n      'Cycling',\r\n      'Running',\r\n    ],\r\n    datasets: [{\r\n        label: 'Desktops',\r\n        backgroundColor: getChartColorsArray('[\"--vz-success-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        pointBackgroundColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: getChartColorsArray('[\"--vz-success\"]'),\r\n        data: [65, 59, 90, 81, 56, 55, 40],\r\n      },\r\n      {\r\n        label: 'Tablets',\r\n        backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.2\"]'),\r\n        borderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        pointBackgroundColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: getChartColorsArray('[\"--vz-primary\"]'),\r\n        data: [28, 48, 40, 19, 96, 27, 100],\r\n      },\r\n    ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      position: 'top',\r\n    },\r\n  }\r\n}\r\n\r\nconst bar = {\r\n  type: \"bar\",\r\n  data: {\r\n    labels: [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n    ],\r\n    datasets: [{\r\n      barPercentage: 0.4,\r\n      label: \"Sales Analytics\",\r\n      backgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.8\"]'),\r\n      borderColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      borderWidth: 1,\r\n      hoverBackgroundColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      hoverBorderColor: getChartColorsArray('[\"--vz-primary-rgb, 0.9\"]'),\r\n      data: [65, 59, 81, 45, 56, 80, 50, 20],\r\n    }, ],\r\n  },\r\n  options: {\r\n    x: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    y: {\r\n      ticks: {\r\n        font: {\r\n          family: 'Poppins',\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          font: {\r\n            family: 'Poppins',\r\n          }\r\n        }\r\n      },\r\n    }\r\n  }\r\n};\r\n\r\nconst PolarArea = {\r\n  type: \"polarArea\",\r\n  data: {\r\n    labels: [\"Series 1\", \"Series 2\", \"Series 3\", \"Series 4\"],\r\n    datasets: [{\r\n      data: [11, 16, 7, 18],\r\n      backgroundColor: [\"#ed5e5e\", \"#13c56b\", \"#e8bc52\", \"#6691e7\"],\r\n      label: \"My dataset\", // for legend\r\n      hoverBorderColor: \"#fff\",\r\n    }, ],\r\n  },\r\n  options: {\r\n    maintainAspectRatio: true,\r\n    legend: {\r\n      position: \"top\",\r\n    },\r\n  },\r\n};\r\n\r\nexport {\r\n  line,\r\n  pie,\r\n  Doughnut,\r\n  radar,\r\n  bar,\r\n  PolarArea\r\n};","import { render } from \"./index.vue?vue&type=template&id=7b52894d\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"E:\\\\Working\\\\velzon_vue_saas\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_b_row","_createVNode","_component_b_col","cols","_createElementVNode","_hoisted_1","_hoisted_2","$props","_hoisted_3","_hoisted_4","_createElementBlock","_Fragment","item","index","active","key","_component_b_link","href","text","components","props","title","type","String","default","items","Array","__exports__","render","_component_Layout","_component_PageHeader","$data","lg","_component_b_card","_component_b_card_body","_component_b_card_title","_component_vue3_chart_js","_mergeProps","height","round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","source","target","create","klen","isValidKey","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","element","ownerDocument","defaultView","getComputedStyle","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","BubbleController","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","plugin_colors","forceOverride","_args","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","fillSource","_getEdge","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","parseFillOption","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","generateTicks","minExp","exp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","__defProp","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","__propIsEnum","propertyIsEnumerable","__defNormalProp","__spreadValues","chartJsEventNames","generateEventObject","chartRef","preventDefault","_defaultPrevented","isDefaultPrevented","generateChartJsEventListener","emit","Vue3ChartJs","required","emits","setup","chartJsEventsPlugin","reduced","eventType","chartJSState","animateSpeed","ref","_sfc_main","getChartColorsArray","newValue","documentElement","rgbaColor","registerGlobalPlugins","install","app","_a","lineTension","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","pie","Doughnut","radar","PolarArea","page","content","appConfig","Layout","PageHeader"],"sourceRoot":""}